sudo apt-get update
sudo apt-get install postgresql

sudo -u postgres createdb esam
sudo -u postgres psql
\l (views databases, see esam)

\c esam

\dt (lists tables)

\d+ (describes table)

\df (lists functions)

CREATE TABLE apps (
	name VARCHAR(50) NOT NULL,
	host VARCHAR(50) NOT NULL,
	status VARCHAR(50) CONSTRAINT status_constraint CHECK (status IN ('up', 'down', 'crashed')),
	PRIMARY KEY(name, host)
);

CREATE TABLE alerts (
  name VARCHAR(50) NOT NULL,
  host VARCHAR(50) NOT NULL,
  status VARCHAR(50) CONSTRAINT alert_status_constraint CHECK (status IN ('up', 'down', 'missed_heartbeat', 'crashed')),
  created_at TIMESTAMP DEFAULT NOW(),
  PRIMARY KEY (name, host, created_at),
  FOREIGN KEY (name, host) REFERENCES apps (name, host)
);

CREATE TABLE misplaced_alerts (
	name VARCHAR(50) NOT NULL,
	host VARCHAR(50) NOT NULL,
	status VARCHAR(50) CONSTRAINT misplaced_alert_status_constraint CHECK (status IN ('up', 'down', 'missed_heartbeat', 'crashed')),
	created_at TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY(name, host, created_at)
);

CREATE OR REPLACE FUNCTION initApps() RETURNS integer AS
$$
BEGIN
  UPDATE apps SET status = 'down';
  RETURN 0;
END;
$$
LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION initBeats(name varchar, host varchar) RETURNS integer AS
$$
BEGIN
  INSERT INTO apps VALUES (name, host, 'up') ON CONFLICT (name, host) DO UPDATE SET status = 'up';
  RETURN 0;
END;
$$
LANGUAGE plpgsql;

----------------------- ENDED HERE -----------------------------


CREATE OR REPLACE FUNCTION update_alerts(name varchar, host varchar, status varchar) RETURNS integer AS
$$
BEGIN
	IF status == 'up' THEN
		INSERT INTO apps VALUES (name, host, status) ON CONFLICT (name, host) DO NOTHING;
  END IF;

	INSERT INTO alerts (name, host, status);
	IF status != "missed_heartbeat" THEN
		UPDATE apps SET status=status WHERE name=name AND host=host;
	END IF;
	RETURN 0;
EXCEPTION
	INSERT INTO misplaced_alerts (name, host, status)
	RETURN -1;
END;
$$
LANGUAGE plpgsql;
